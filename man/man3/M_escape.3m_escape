." Text automatically generated by txt2man
.TH "M_escape" "3m_escape" "September 12, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBM_escape(3f) \fP- [M_escape] substitute escape sequences for XML-like syntax (prototype) in strings
\fB
.SH SYNOPSIS
.nf
.fam C
\fBuse\fP M_list, \fIonly\fP : esc, esc_mode, \fIupdate\fP
.fam T
.fi
.SH DESCRIPTION
This is a prototype exploring using XML-like syntax to add attributes
to terminal output such as color.
.PP
ANSI escape sequences are not universally supported by all terminal
emulators; and normally should be suppressed when not going to a tty
device. This routine provides the basic structure to support such
behaviors. or to perhaps in the future generate a CSS style sheet
and HTML instead of text to the terminal, \.\.\.
.PP
The original concept was to allow formatting by using an existing
XML library to allow the user to write HTML and to format it on a
terminal like w3m, lynx, and link do. And in some ways this is an
opposite approach in that it is directly formatting the text by using
a similar syntax to directly generate text attributes; but it is a
much simpler approach programmatically for this prototype.
.PP
Typically, you should \fBuse\fP \fBM_system::system_istty\fP(3f) to set the default
to "plain" instead of "vt102" when the output file is not a terminal.
.RE
.PP

.SH MAJOR FEATURES
.IP \(bu 3
Add ANSI terminal escape sequences with an XML-like syntax with \fBESC\fP(3f).
.IP \(bu 3
suppress the escape sequence output with \fBESC_MODE\fP(3f).
.IP \(bu 3
add, delete, and replace what strings are produced using \fBUPDATE\fP(3f).
.SH LIMITATIONS
.IP \(bu 3
colors are not nestable, keywords are case-sensitive,
.IP \(bu 3
not all terminals obey the sequences. On Windows, it is best if
you \fBuse\fP Windows 10+ and/or the Linux mode; although it has worked
with all CygWin and MinGW and Putty windows and mintty.
.RE
.PP

.SH FUTURE
Full support for alternate output formats like HTML and popular markdown
syntax. For example
.PP
.nf
.fam C
      ANSI  HTML        Markdown
            <h1></h1>   #
            <h2></h2>   ##
            <b></b>     ** and **
            <i></i>     __ and __

.fam T
.fi
.RE
Apparently have to make a stack of colors to allow nesting colors
.RS
.PP
How common are extensions like xterm-256 has to set RGB values for
colors and so on?
.PP
Should a call to \fBsystem_istty\fP(3f) be built in to turn off escape sequences
when a terminal is not present?
.PP
Attributes are currently ended at the end of each call to \fBesc\fP(3f). Perhaps
allow multi-line formatting?
.SH EXAMPLE
Sample program
.PP
.nf
.fam C
   program demo_M_escape
   use M_escape, only : esc, esc_mode
   implicit none
   character(len=1024) :: line
   real :: value
      write(*,'(a)') esc('<r><W>ERROR:</W>This should appear as red text</y>')
      write(*,'(a)') esc('<y><B>WARNING:</B></y> This should appear as default text')

      value=3.4567
      if( (value>0.0) .and. (value<100.0))then
         write(line,fmt='("<w><G>GREAT</G></w>:The new value <Y><b>",f8.4,"</b></Y> is in range")')value
      else
         write(line,fmt='("<R><e>ERROR</e></R>:The new value <Y><b>",g0,"</b></Y> is out of range")')value
      endif

      write(*,'(a)')esc(trim(line))
      ! write as plain text
      call esc_mode(manner='plain')
      write(*,'(a)')esc(trim(line))

   end program demo_M_escape

